version: '3.8'

x-common-variables: &common-variables
  PYTHONUNBUFFERED: 1
  PYTHONDONTWRITEBYTECODE: 1

x-common-healthcheck: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYTHON_VERSION: 3.11
    ports:
      - "${PORT:-8000}:8000"
    environment:
      <<: *common-variables
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - media_volume:/usr/src/app/media
      - static_volume:/usr/src/app/static
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/health"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *common-variables
      CELERY_WORKER: "true"
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - media_volume:/usr/src/app/media
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "celery", "-A", "reconpoint", "inspect", "ping", "-d", "celery@$HOSTNAME"]

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-reconpoint}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-reconpoint}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  media_volume:
  static_volume:

