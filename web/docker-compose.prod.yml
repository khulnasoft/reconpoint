version: '3.8'

x-common-variables: &common-variables
  PYTHONUNBUFFERED: 1
  PYTHONDONTWRITEBYTECODE: 1
  DJANGO_SETTINGS_MODULE: reconpoint.settings.production
  DJANGO_DEBUG: "false"
  DJANGO_SECURE_SSL_REDIRECT: "true"
  DJANGO_SESSION_COOKIE_SECURE: "true"
  DJANGO_CSRF_COOKIE_SECURE: "true"

x-common-healthcheck: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYTHON_VERSION: 3.11
    restart: unless-stopped
    environment:
      <<: *common-variables
    env_file: .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - media_volume:/usr/src/app/media
      - static_volume:/usr/src/app/static
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/health"]
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      <<: *common-variables
      CELERY_WORKER: "true"
    env_file: .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - media_volume:/usr/src/app/media
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "celery", "-A", "reconpoint", "inspect", "ping", "-d", "celery@$HOSTNAME"]
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/usr/share/nginx/static
      - media_volume:/usr/share/nginx/media
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  media_volume:
    driver: local
  static_volume:
    driver: local

